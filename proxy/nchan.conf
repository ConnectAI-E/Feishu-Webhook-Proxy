init_by_lua_block { require "cjson"; }

server {
    listen 80 default_server;
    error_log /dev/stderr debug;
    location /status { nchan_stub_status; }

    location /auth {
        auth_basic "closed site";
        # enable basic auth
        # auth_basic_user_file /etc/htpasswd;
        content_by_lua_block { ngx.exit(ngx.HTTP_OK) }
    }
    location /_auth {
        proxy_pass http://127.0.0.1/auth;
        proxy_ignore_client_abort on;
    }

    location ~ /sub/([a-z0-9_,]+) {
        nchan_pubsub;
        nchan_websocket_client_heartbeat PING PONG;
        nchan_websocket_ping_interval 3;
        nchan_channel_id "$1";
        nchan_channel_id_split_delimiter ",";
        nchan_subscriber_first_message 0;
        nchan_message_buffer_length 0;
        nchan_channel_group limited;
        nchan_group_max_subscribers 1000;
        if ($request_uri ~* ^/sub/cli_) {
            nchan_authorize_request /_auth;
        }
    }

    location ~ /hook/([a-z0-9_]+) {
        default_type 'application/json';
        set $appid $1;
        content_by_lua_block {
            local cjson = require "cjson"
            ngx.req.read_body()
            local data = ngx.req.get_body_data()
            local message = cjson.decode(data)
            local headers = ngx.req.get_headers()
            local request_id = headers["X-Request-Id"]
            local signature = headers["X-Lark-Signature"]
            -- save appid in headers
            headers['x-app-id'] = ngx.var.appid

            -- forward message to client
            ngx.location.capture("/sub/" .. ngx.var.appid, { method = ngx.HTTP_POST, body = cjson.encode({ headers = headers, body = message }) })

            -- wait message from "/sub/<request_id>"
            if signature == nil then
                ngx.req.set_method(ngx.HTTP_GET)
                ngx.req.discard_body()
                ngx.exec("/sub/" .. request_id)
            end
        }
    }
}
